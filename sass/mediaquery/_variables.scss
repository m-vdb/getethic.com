// Debug mode allow to fake mediaquery by appending a class to html, for instance html.print or html.hidpi
// DONT use this in production : this could duplicate a large amount of code
$debug-mq:					false !default;

// Basic media queries
$all-mq:					"all" !default;
$screen-mq:					"screen" !default;
$print-mq:					"print" !default;

// Min widths
$mobile-min-width:			false !default;	// mobile starts at 0 by nature
$large-mobile-min-width:	480px !default;
$tablet-min-width:			768px !default;
$desktop-min-width:			980px !default;
$large-desktop-min-width:	1200px !default;

// Max widths
$mobile-max-width: 			$tablet-min-width - 1px !default; // large mobile is mobile...
$large-mobile-max-width: 	$tablet-min-width - 1px !default;
$tablet-max-width: 			$desktop-min-width - 1px !default;
$desktop-max-width: 		$large-desktop-min-width - 1px !default;
$large-desktop-max-width: 	false !default; // large desktop is infinite

// Min media query
$mobile-min-mq: 			simple-mq("min-width", $mobile-min-width) !default;	
$large-mobile-min-mq: 		simple-mq("min-width", $large-mobile-min-width) !default;
$tablet-min-mq: 			simple-mq("min-width", $tablet-min-width) !default;
$desktop-min-mq: 			simple-mq("min-width", $desktop-min-width) !default;	
$large-desktop-min-mq: 		simple-mq("min-width", $large-desktop-min-width) !default;

// Max media query
$mobile-max-mq: 			simple-mq("max-width", $mobile-max-width) !default;	
$large-mobile-max-mq: 		simple-mq("max-width", $large-mobile-max-width) !default;
$tablet-max-mq: 			simple-mq("max-width", $tablet-max-width) !default;
$desktop-max-mq: 			simple-mq("max-width", $desktop-max-width) !default;	
$large-desktop-max-mq: 		simple-mq("max-width", $large-desktop-max-width) !default;


// Only one breakpoint
$mobile-only-mq:			join-mq($screen-mq, $mobile-min-mq, $mobile-max-mq) !default;
$large-mobile-only-mq:		join-mq($screen-mq, $large-mobile-min-mq, $large-mobile-max-mq) !default;
$tablet-only-mq:			join-mq($screen-mq, $tablet-min-mq, $tablet-max-mq) !default;
$desktop-only-mq:			join-mq($screen-mq, $desktop-min-mq, $desktop-max-mq) !default;
$large-desktop-only-mq:		join-mq($screen-mq, $large-desktop-min-mq, $large-desktop-max-mq) !default;

// target one breakpoint and up
$mobile-and-up-mq:			join-mq($screen-mq, $mobile-min-mq) !default;
$large-mobile-and-up-mq:	join-mq($screen-mq, $large-mobile-min-mq) !default;
$tablet-and-up-mq:			join-mq($screen-mq, $tablet-min-mq) !default;
$desktop-and-up-mq:			join-mq($screen-mq, $desktop-min-mq) !default;
$large-desktop-and-up-mq:	join-mq($screen-mq, $large-desktop-min-mq) !default;

// target one breakpoint and down
$mobile-and-down-mq:		join-mq($screen-mq, $mobile-max-mq) !default;
$large-mobile-and-down-mq:	join-mq($screen-mq, $large-mobile-max-mq) !default;
$tablet-and-down-mq:		join-mq($screen-mq, $tablet-max-mq) !default;
$desktop-and-down-mq:		join-mq($screen-mq, $desktop-max-mq) !default;
$large-desktop-and-down-mq:	join-mq($screen-mq, $large-desktop-max-mq) !default;

// HiDPI means Retina... unless it is the inverse ?
$hidpi-mq: 					"only screen and (-webkit-min-device-pixel-ratio: 2),
							 only screen and (   min--moz-device-pixel-ratio: 2),
							 only screen and (     -o-min-device-pixel-ratio: 2/1),
							 only screen and (        min-device-pixel-ratio: 2),
							 only screen and (                min-resolution: 192dpi),
							 only screen and (                min-resolution: 2dppx)";
